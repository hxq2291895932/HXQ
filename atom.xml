<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>umzhaa‘website</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://umzhaa.website/"/>
  <updated>2019-12-14T15:25:52.072Z</updated>
  <id>http://umzhaa.website/</id>
  
  <author>
    <name>umzhaa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&#39;第一篇博客文章&#39;</title>
    <link href="http://umzhaa.website/2019/12/12/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <id>http://umzhaa.website/2019/12/12/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</id>
    <published>2019-12-12T15:55:49.000Z</published>
    <updated>2019-12-14T15:25:52.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于建blog的过程中和踩过的坑"><a href="#关于建blog的过程中和踩过的坑" class="headerlink" title="关于建blog的过程中和踩过的坑"></a>关于建blog的过程中和踩过的坑</h1><p><em>写在前面：一个电脑新手，这是我第一次写博客，参考的教程来自15级的一个学长，基本就是根据他建立的过程来操作的</em></p><h2 id="主要步骤："><a href="#主要步骤：" class="headerlink" title="主要步骤："></a>主要步骤：</h2><ul><li><font face="微软雅黑" size=3>注册github账户，新开一个repository，设置git page<br>也可以租一个VPS，<del>但是免费的git page托管服务多好用啊</del></font></li><li><font face="微软雅黑" size=3>下载安装hexo，跟着教程来操作就OK了</font>  </li><li><font face="微软雅黑" size=3>可以再hexo设置自己喜欢的主题和插件</font></li><li><font face="微软雅黑" size=3>最后托管到github上面</font><blockquote><p><font face="微软雅黑" size=3>其实用这个的另一个原因是我想学一学markdown，之前有看过这个，感觉用起来还不错，语法也和html基本上差不多<del>关键是jupyter notebook也支持</del>(。・∀・)ノ</font></p></blockquote></li></ul><p>嘿嘿(～﹃～)~zZ，先写这么多，踩过的坑有点多，一时间写不完。</p><h2 id="遇到的坑（或者比较难的地方吧）："><a href="#遇到的坑（或者比较难的地方吧）：" class="headerlink" title="遇到的坑（或者比较难的地方吧）："></a>遇到的坑（或者比较难的地方吧）：</h2><blockquote><p>注意，下面所有带[]的表示里面的内容需要根据自己的进行替换，并没有什么其他的意思  </p></blockquote><p>绑定github账户</p><blockquote><p>这部分其实还好，也就是git的使用，baidu教程一大堆，常用的也就那几个</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git init  #初始化本地git仓库</span><br><span class="line">git add filename #添加文件到缓冲区</span><br><span class="line">git commit -m &quot;提交的说明&quot; #提交文件更新</span><br><span class="line">git status  #查看git库的状态</span><br><span class="line">git remote add origin [远端仓库地址] #这样就增加了远程仓库</span><br><span class="line">git push origin master #push到origin仓库的master分支</span><br><span class="line">git push [仓库地址] master #push到仓库master分支</span><br><span class="line">git pull # 拉取远端仓库到本地，如果push有问题，就要先pull，解决冲突，然后再push</span><br><span class="line">git config --global user.name &quot;[你的名字]&quot; #这里用来作为github收到的提交的用户名</span><br><span class="line">git config --global user.name &quot;[你的邮箱]&quot; #和上面作用相同</span><br><span class="line">ssh-keygen  #生成公钥和私钥，用来连接github</span><br></pre></td></tr></table></figure><p>购买域名（VPS）</p><blockquote><ul><li>我是在Gandi.net上面买的，感觉还比较便宜。因为大天朝还需要备案，总感觉不太方便，所以就在国外买了，Godaddy也不错听说也不错，但是我注册一直不成功，就换成这个了，目前买的是每年7RMB。  </li><li>Gandi还可以添加网页转址，所以直接将网页转向github的二级域名username.github.io也能用，但是那就没有买域名的意义了。  </li><li>然后就是添加DNS，Gandi提供免费的DNS，但是国外的毕竟速度不如国内，所以用国内的DNSPod，要在Gandi那里改DNS服务器，在DNSPod加上要解析的域名地址，在控制台加上@ A [git pages的IP地址]、WWW CNAME [你的域名]记录。</li><li>最后在本地新建一个CNAME文件，文件内容是你的域名，放到source文件夹下，因为hexo每次clean会将非generate生成的文件清除，而放到source文件夹下不会被清除。</li></ul></blockquote><p>_config.yml的配置<br>我觉得<text style="color:red">最难</text>的一步是URL和ROOT的设置，经常出错。</p><blockquote><ul><li>一开始我的域名是”[username].github.io/[sample]”。<br>那么URL要设置成”[username].github.io/[sample]”，而ROOT要设置成”/[sample]/“（注意’/‘号）</li><li>后来我的域名换成了”umzhaa.website”，也就是现在这个<br>那么我的URL就要设置成”umzhaa.website”，ROOT设置成”/“</li></ul></blockquote><p>添加看板娘</p><blockquote><p>hexo是有自带的看板娘插件的  </p></blockquote><p><code>npm install --save hexo-helper-live2d</code></p><blockquote><p>安装的插件后修改_config.yml，在里面添加</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https:&#x2F;&#x2F;github.com&#x2F;EYHN&#x2F;hexo-helper-live2d</span><br><span class="line">live2d:</span><br><span class="line">  enable: true # 开启live2d</span><br><span class="line">  # enable: false</span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw&#x2F; # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib&#x2F; # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets&#x2F; # 模型文件相对与插件根目录路径</span><br><span class="line">  # scriptFrom: jsdelivr # jsdelivr CDN</span><br><span class="line">  # scriptFrom: unpkg # unpkg CDN</span><br><span class="line">  # scriptFrom: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;live2d-widget@3.x&#x2F;lib&#x2F;L2Dwidget.min.js # 你的自定义 url</span><br><span class="line">  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko # npm-module package name</span><br><span class="line">    # use: wanko # 博客根目录&#x2F;live2d_models&#x2F; 下的目录名</span><br><span class="line">    # use: .&#x2F;wives&#x2F;wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;live2d-widget-model-wanko@1.0.5&#x2F;assets&#x2F;wanko.model.json # 你的自定义 url</span><br></pre></td></tr></table></figure><p><font face="微软雅黑" style="color:blue;" size=4>有关其他模型的下载</font><br><font size=3.5>使用自己下载的模型</font>  </p><p>方式一（推荐使用）：</p><ul><li>在您博客根目录下创建一个 live2d_models 文件夹</li><li>在此文件夹内新建一个子文件夹</li><li>将你的 Live2D 模型复制到这个子文件夹中，自有模型应当有一个 .model.json 文件 (例如 mymiku.model.json)</li><li>将子文件夹的名称输入 _config.yml 的 model.use 中</li></ul><p>方式二：</p><ul><li>您可直接输入相对于博客根目录的自定义路径到 model.use中,示例: ./wives/wanko</li></ul><p><font size=3.5>使用 npm 下载的模型</font><br>方式一：  </p><p>下载现有的 npm 资源</p><ul><li>官方提供了多款精美的模型，<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">模型预览</a></li><li>你需要先使用 npm install 模型的包名 来安装，然后将包名输入位于 _config.yml 的 model.use 中</li></ul><p>方式二：</p><ul><li>发布你自己的模型包</li><li>新建一个目录, 用你的 Node 环境执行 npm init，我们推荐您使用 live2d-widget-model-xxx 的包名<br>再使用方式一来使用自己的模型</li></ul><p>先写这么多吧，以后如果有什么要补充的再更新吧，如果没有的话可能就要开新坑了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于建blog的过程中和踩过的坑&quot;&gt;&lt;a href=&quot;#关于建blog的过程中和踩过的坑&quot; class=&quot;headerlink&quot; title=&quot;关于建blog的过程中和踩过的坑&quot;&gt;&lt;/a&gt;关于建blog的过程中和踩过的坑&lt;/h1&gt;&lt;p&gt;&lt;em&gt;写在前面：一个电脑新
      
    
    </summary>
    
    
    
      <category term="博客,教程" scheme="http://umzhaa.website/tags/%E5%8D%9A%E5%AE%A2-%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
